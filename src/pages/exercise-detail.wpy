<style>
page{
    background-color: white;
}
</style>

<template>
    <view class="padding">
        <view class="flex p-xs mb-sm">
            <view class="flex-sub flex justify-start">
                <button class="cu-btn bg-olive round shadow" @tap="onClickEditExercise">编辑习题</button>
            </view>
        </view>
    </view>

    <view class="solid-bottom padding">
        <view class="text-black text-xl text-bold text-cut">
            {{exercise.Etitle}}
        </view>
        <view class="flex margin">
            <view class="flex-start cu-tag radius bg-green text-lg light">
                {{exercise.Egrade}}
            </view>
            <view class="flex-start cu-tag radius bg-brown text-lg light">
                {{exercise.Esubject}}
            </view>
        </view>
    </view>
    <view class="padding solid-bottom">
        <view class="text-xl text-black text-bold">
            题目描述: {{exercise.Edescription}}
        </view>

        <view class="margin text-lg" wx:if="{{exercise.EnameTxt!=''}}">
            {{exercise.EnameTxt}}
        </view>

        <view class="margin" wx:if="{{exercise.EnamePath!=''}}">
            <view wx:if="{{exercise.Etype!='听写'}}" >
                <view wx:for="{{imageListOfName}}" wx:key="index" wx:for-item="imgOfName">
                    <image src="{{imgOfName!=imageUrl?imgOfName:''}}" mode="widthFix" @tap="ViewImageOfName" data-url="{{imgOfName}}"></image>
                </view>
            </view>
            
            <audio src="{{exercise.EnamePath?(audioUrl + exercise.EnamePath):''}}" wx:if="{{exercise.Etype=='听写' && exercise.EnamePath!=''}}" controls="true" name="" author=""></audio>

            
        </view>
        
        
    </view>
    <view class="padding solid-bottom">
        <view class="text-xl text-black text-bold">
            题目答案
        </view>

        <view class="margin text-lg" wx:if="{{exercise.EanswerTxt!=''}}">
            {{exercise.EanswerTxt}}
        </view>

        <view class="margin" wx:if="{{exercise.EanswerPath!=''}}">
            <view wx:for="{{imageListOfAnswer}}" wx:key="index" wx:for-item="imgOfAnswer">
                <image src="{{imgOfAnswer!=imageUrl?imgOfAnswer:''}}" mode="widthFix" @tap="ViewImageOfAnswer" data-url="{{imgOfAnswer}}"></image>
            </view>
        </view>
    </view>
    
    <view class="padding">
        <view class="flex p-xs mb-sm">
            <view class="padding flex-sub flex justify-center">
                <button class="cu-btn bg-red round shadow lg" @tap="onClickDeleteExercise">删除习题</button>
            </view>
        </view>
    </view>
    

</template>

<script>
import wepy from 'wepy'
import {IMAGE_OF_EXERCISE_URL} from "@/common/url";
import {getSelectionText} from "@/common/param-conversion";

export default class Index extends wepy.page {
    config = {
        usingComponents:{
        }
    }

    data = {
        Eid:0,
        exercise:{},
        imageUrl: IMAGE_OF_EXERCISE_URL,
        audioUrl:wepy.$instance.globalData.serverUrl + '/app/file/get_audio?name=',
        imageListOfName: [],
        imageListOfAnswer: [],
    }

    methods = {
        
        ViewImageOfName(e) {
            let self = this
            console.log(self.imageUrl + e.currentTarget.dataset.url)
            wx.previewImage({
                urls: self.imageListOfName,
                current: self.imageUrl + e.currentTarget.dataset.url
            });
        },

        ViewImageOfAnswer(e) {
            let self = this
            console.log(self.imageUrl + e.currentTarget.dataset.url)
            wx.previewImage({
                urls: self.imageListOfAnswer,
                current: self.imageUrl + e.currentTarget.dataset.url
            });
        },

        onClickEditExercise(e){
            let self = this
            wx.navigateTo({
                url:"edit-exercise?eid="+self.exercise.Eid,
            })
        },

        onClickDeleteExercise(e) {
            let self = this
            wx.showModal({
                title: '删除习题',
                content: '确定要删除此习题？',
                cancelText: '取消',
                confirmText: '确定',
                success: res => {
                    if (res.confirm) {
                        wepy.request({
                            url:wepy.$instance.globalData.serverUrl + '/app/exercise/delete_exercise/:id' + '?Eid=' + self.exercise.Eid.toString(),
                            method:'DELETE',
                            header: wepy.$instance.setHeader(),
                            success: function(res) {
                                console.log(res)
                                if (res.data.Code == 1){
                                    wepy.showToast({
                                        title: '删除成功', //提示的内容,
                                        icon: 'success', //图标,
                                        duration: 2000, //延迟时间,
                                        mask: true, //显示透明蒙层，防止触摸穿透,
                                        success: function(){
                                            setTimeout(function(){
                                                wepy.navigateBack({
                                                    delta: 1
                                                })
                                            }, 1000)
                                        },
                                    });
                                }
                            }
                        })
                    }
                }
            })
        }
    }

    getExerciseData(){
        let self = this
        wepy.request({
                url:wepy.$instance.globalData.serverUrl + '/app/exercise/get_exercise',
                method:'GET',
                header: wepy.$instance.setHeader(),
                data:{
                    Eid:self.Eid
                },
                success: function(res) {
                    console.log(res)
                    if (res.data.Code == 1){
                        const exercise = res.data.Data;
                        if(exercise.EnamePath!=""){
                            let tmpList = exercise.EnamePath.split(";")
                            self.imageListOfName = tmpList.map(x => self.imageUrl + x)
                        }
                        if(exercise.EanswerPath!=""){
                            let tmpList = exercise.EanswerPath.split(";")
                            self.imageListOfAnswer = tmpList.map(x => self.imageUrl + x)
                        }
                        if(exercise.Etype === "选择题"){
                            exercise.EanswerTxt = getSelectionText(exercise.EanswerTxt, JSON.parse(exercise.EtypeDetail));
                        }
                        self.exercise = exercise;
                        self.$apply()
                    }
                }
            })
    }

    onLoad(options) {
        let self = this

        self.Eid = options.eid
    }

    onShow(){
        let self = this
        self.getExerciseData()
    }
}
</script>
