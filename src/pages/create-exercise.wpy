<style>

</style>

<template>
    <form @submit='formSubmit'>
        <view class='flex bg-white align-center padding'>
            <view class='padding flex-sub'>
            </view>
            <view class='padding flex-sub text-center text-black text-lg text-bold'>
                添加习题
            </view>
            <view class='padding flex-sub text-right'>

            </view>
        </view>

        <view class='cu-form-group'>
            <view class='title'>标题</view>
            <input name='Etitle' placeholder='习题标题用于列表展示'></input>
        </view>
        <view class='cu-form-group'>
            <view class='title'>描述</view>
            <input name='Edescription' placeholder='题目提示信息'></input>
        </view>

        <view class='cu-form-group'>
            <view class='title'>年级</view>
            <picker bindchange='pickerGradeChange' name='Egrade' range='{{gradePicker}}'
                    value='{{gradePicker[gradeIndex]}}'>
                <view class='picker'>
                    <text class='text-lg'>{{ gradeIndex ? gradePicker[gradeIndex] : '选择题目的年级' }}</text>
                </view>
            </picker>
        </view>

        <view class='cu-form-group'>
            <view class='title'>科目</view>
            <picker bindchange='pickerSubjectChange' name='Esubject' range='{{subjectPicker}}'
                    value='{{subjectPicker[subjectIndex]}}'>
                <view class='picker'>
                    <text class='text-lg'>{{ subjectIndex ? subjectPicker[subjectIndex] : '选择题目的科目' }}</text>
                </view>
            </picker>
        </view>

        <view class='cu-form-group'>
            <view class='title'>类型</view>
            <picker bindchange='pickerTypeChange' name='Etype' range='{{typePicker[subjectPicker[subjectIndex]]}}'
                    value='{{typePicker[subjectPicker[subjectIndex]][typeIndex]}}'>
                <view class='picker'>
                    <text class='text-lg'>{{
                            typeIndex ? typePicker[subjectPicker[subjectIndex]][typeIndex] : '选择题目的类型'
                        }}
                    </text>
                </view>
            </picker>
        </view>
        <view class='cu-form-group'>
            <view class='title'>难度</view>
            <picker bindchange='pickerDifficultyChange' name='Edifficulty' range='{{difficultyPicker}}'
                    value='{{difficultyPicker[difficultyIndex]}}'>
                <view class='picker'>
                    <text class='text-lg'>{{ difficultyPicker[difficultyIndex] }}</text>
                </view>
            </picker>
        </view>

        <view class='cu-form-group'>
            <view class='title'>批改方式</view>
            <picker bindchange='pickerAutoCorrectChange' name='EautoCorrect' range="{{ autoCorrectPicker}}"
                    range-key="label" value="{{autoCorrectIndex}}">
                <view class='picker'>
                    <text class='text-lg'>{{ autoCorrectPicker[autoCorrectIndex].label}}</text>
                </view>
            </picker>
        </view>

        <view class='cu-form-group'>
            <view class='title'>单元</view>
            <input name='Eunit' placeholder='【选填】一单元、二单元'></input>
        </view>


        <view class='cu-form-group'>
            <view class='title'>习题题目文字</view>
            <input name='EnameTxt' placeholder='习题题目文字'></input>
        </view>

        <view class='cu-bar bg-white' style='border-top:1rpx solid #eee;'
              wx:if="{{typePicker[subjectPicker[subjectIndex]][typeIndex]!='听写'}}">
            <view class='action'>
                习题题目图片
            </view>
            <view class='action'>
                {{ imgList.name.length }}/9
            </view>
        </view>
        <view class='cu-form-group' wx:if="{{typePicker[subjectPicker[subjectIndex]][typeIndex]!='听写'}}">
            <view class='grid col-3 grid-square flex-sub'>
                <view bindtap='ViewImage' class='bg-img' data-file='name' data-url='{{imgList.name[index]}}'
                      wx:for='{{imgList.name}}' wx:key='{{index}}'>
                    <image mode='aspectFill' src='{{imgList.name[index]}}'></image>
                    <view catchtap='DelImg' class='cu-tag bg-red' data-file='name' data-index='{{index}}'>
                        <text class='cuIcon-close'></text>
                    </view>
                </view>
                <view bindtap='ChooseImage' class='solids' data-file='name' wx:if='{{imgList.name.length<9}}'>
                    <text class='cuIcon-cameraadd'></text>
                </view>
            </view>
        </view>


        <view class='cu-bar bg-white' style='border-top:1rpx solid #eee;'
              wx:if="{{typePicker[subjectPicker[subjectIndex]][typeIndex]=='听写'}}">
            <view class='action'>
                习题题目音频
            </view>
            <view class='action'>
                {{ audioUploadPath == '' ? '0' : '1' }}/1
            </view>
            <button class="cu-btn bg-{{audioUploadPath!=''?'green':'grey'}} shadow" @tap='onClickPlayRecord'>播放录音
            </button>

        </view>
        <view class='cu-bar bg-white' style='border-top:1rpx solid #eee;'
              wx:if="{{typePicker[subjectPicker[subjectIndex]][typeIndex]=='听写'}}">
            <radio-group bindchange='audioSelectRadioChange' class='flex padding'>
                <view class='flex-sub flex align-center' wx:for='{{audioSelectList}}' wx:key='{{item.value}}'>
                    <view class='margin-xs'>
                        <radio checked='{{item.checked}}' value='{{item.value}}'/>
                    </view>
                    <view class=''>{{ item.name }}</view>
                </view>
            </radio-group>
        </view>
        <view class='cu-form-group'
              wx:if="{{typePicker[subjectPicker[subjectIndex]][typeIndex]=='听写' && audioSelectList[0].checked}}">
            <button class='cu-btn bg-green shadow' @tap='onClickUploadMP3'>
                上传音频
            </button>
            <view>（仅限MP3文件）</view>
            <view>{{ audioName == null ? '无音频文件' : audioName }}</view>
        </view>

        <view class='cu-form-group'
              wx:if="{{typePicker[subjectPicker[subjectIndex]][typeIndex]=='听写' && audioSelectList[1].checked}}">
            <button class='cu-btn bg-green shadow' @touchend='endRecord' @touchstart='startRecord'>
                点击录音
            </button>
            <button class="cu-btn bg-{{audioUploadPath!=''?'green':'grey'}} shadow" @tap='onClickPlayRecord'>播放录音
            </button>
            <view class='action' wx:if="{{audioUploadPath!=''}}">{{ duration }}</view>
            <view class='action' wx:else>0'000s</view>
        </view>


        <view class='cu-form-group'>
            <view class='title'>习题答案文字</view>
            <input name='EanswerTxt' placeholder='习题答案文字'></input>
        </view>

        <view class='cu-bar bg-white' style='border-top:1rpx solid #eee;'>
            <view class='action'>
                习题答案图片
            </view>
            <view class='action'>
                {{ imgList.answer.length }}/9
            </view>
        </view>

        <view class='cu-form-group'>
            <view class='grid col-3 grid-square flex-sub'>
                <view bindtap='ViewImage' class='bg-img' data-file='answer' data-url='{{imgList.answer[index]}}'
                      wx:for='{{imgList.answer}}' wx:key='{{index}}'>
                    <image mode='aspectFill' src='{{imgList.answer[index]}}'></image>
                    <view catchtap='DelImg' class='cu-tag bg-red' data-file='answer' data-index='{{index}}'>
                        <text class='cuIcon-close'></text>
                    </view>
                </view>
                <view bindtap='ChooseImage' class='solids' data-file='answer' wx:if='{{imgList.answer.length<9}}'>
                    <text class='cuIcon-cameraadd'></text>
                </view>
            </view>
        </view>

        <view class='padding flex justify-center bg-white'>
            <button class='cu-btn bg-green shadow lg' form-type='submit'>上传习题</button>
        </view>
    </form>
</template>

<script>

import {autoCorrectRange, difficultRange, gradeRange, subjectRange, typeRange} from '../common/constant';

const recoderManager = wx.getRecorderManager();
const innerAudioContext = wx.createInnerAudioContext();
import wepy from 'wepy';
import {convertExercise} from "../common/param-conversion";

export default class Index extends wepy.page {
    data = {
        imgList: {
            name: [],
            answer: []
        },
        gradePicker: gradeRange,
        subjectPicker: subjectRange,
        typePicker: typeRange,
        difficultyPicker: difficultRange,
        autoCorrectPicker: autoCorrectRange,
        gradeIndex: null,
        subjectIndex: null,
        typeIndex: null,
        difficultyIndex: 0,
        autoCorrectIndex: 0,
        nameUploadPath: '',
        answerUploadPath: '',
        audioUploadPath: '',
        recordingTimeqwe: 0,//录音计时
        setInter: '',//录音名称
        duration: '',
        audioSelectList: [{
            value: '0',
            name: '文件上传',
            checked: true
        }, {
            value: '1',
            name: '自行录音',
            checked: false
        }],
        audioName: null
    };

    methods = {
        pickerAutoCorrectChange(e){
            let self = this;
            self.autoCorrectIndex = e.detail.value;
        },
        pickerDifficultyChange(e) {
            let self = this;
            self.difficultyIndex = e.detail.value;
        },

        pickerGradeChange(e) {
            let self = this;
            self.gradeIndex = e.detail.value;
        },

        pickerSubjectChange(e) {
            let self = this;
            if (self.subjectIndex != e.detail.value) {
                self.typeIndex = null;
            }
            self.subjectIndex = e.detail.value;

        },

        pickerTypeChange(e) {
            let self = this;
            self.typeIndex = e.detail.value;
        },

        audioSelectRadioChange(e) {
            let self = this;
            console.log('radio发生change事件，携带value值为：', e.detail.value);

            for (let i = 0, len = self.audioSelectList.length; i < len; ++i) {
                self.audioSelectList[i].checked = self.audioSelectList[i].value === e.detail.value;
            }

        },

        ChooseImage(e) {
            let self = this;
            let file = e.currentTarget.dataset.file;
            wx.chooseImage({
                count: 9, //默认9
                sizeType: ['original', 'compressed'], //可以指定是原图还是压缩图，默认二者都有
                sourceType: ['album', 'camera'],
                success: (res) => {
                    if (self.imgList[file].length != 0) {
                        self.imgList[file] = self.imgList[file].concat(res.tempFilePaths);
                    } else {
                        self.imgList[file] = res.tempFilePaths;
                    }
                    self.$apply();
                }
            });
        },

        ViewImage(e) {
            let self = this;
            let file = e.currentTarget.dataset.file;
            wx.previewImage({
                urls: self.imgList[file],
                current: e.currentTarget.dataset.url
            });
        },

        DelImg(e) {
            let self = this;
            let file = e.currentTarget.dataset.file;
            wx.showModal({
                title: '删除题目图片',
                content: '确定要删除这张图片吗？',
                cancelText: '取消',
                confirmText: '确定',
                success: res => {
                    if (res.confirm) {
                        self.imgList[file].splice(e.currentTarget.dataset.index, 1);
                        self.$apply();
                    }
                }
            });
        },

        startRecord(e) {
            const options = {
                duration: 60000,
                sampleRate: 16000,
                numberOfChannels: 1,
                encodeBitRate: 48000,
                format: 'mp3',
                frameSize: 50
            };
            recoderManager.start(options);
            recoderManager.onStart(() => {
                console.log('开始录音');
            });
        },

        endRecord(e) {
            let self = this;
            recoderManager.stop();
            recoderManager.onStop((res) => {
                console.log('停止录音', res);
                self.audioUploadPath = res.tempFilePath;
                self.duration = Math.floor(res.duration / 1000) + '\'' + res.duration % 1000 + 's';
                self.$apply();
                wx.showToast({
                    title: '录音完成'
                });
            });
        },

        onClickPlayRecord() {
            let self = this;
            innerAudioContext.src = self.audioUploadPath;
            innerAudioContext.play();
            innerAudioContext.onEnded(() => {
                innerAudioContext.stop();
            });
        },

        onClickUploadMP3(e) {
            let self = this;
            wx.chooseMessageFile({
                count: 1,
                type: 'file',
                success(res) {
                    // 上传文件为MP3文件
                    if (res.tempFiles[0].name.indexOf('.mp3') != -1) {
                        self.audioUploadPath = res.tempFiles[0].path;
                        self.audioName = res.tempFiles[0].name;
                        self.$apply();
                    }

                }
            });
        },

        formSubmit(e) {
            let self = this;

            let sendFormData = e.detail.value; // form 表单数据

            let successUp = 0; //成功
            let failUp = 0; //失败
            let count = 0; //第几张


            if (self.imgList.name.length > 0 && self.typePicker[self.subjectPicker[self.subjectIndex]][self.typeIndex] != '听写') {// 图片上传
                let length = self.imgList.name.length; //总数
                self.recursionImgUpload(self, self.imgList.name, successUp, failUp, count, length);
                if (failUp > 0) {
                    wepy.showToast({
                        title: '上传图片出错', //提示的内容,
                        icon: 'error', //图标,
                        duration: 2000, //延迟时间,
                        mask: true, //显示透明蒙层，防止触摸穿透,
                        success: res => {
                        }
                    });
                    return;
                }

                // 处理题目图片第一个
                let lastindexOfName = self.imgList.name[0].lastIndexOf('/');
                sendFormData['EnamePath'] = self.imgList.name.length == 0 ? '' : 'exercise/' + self.imgList.name[0].substring(lastindexOfName + 1, self.imgList.name[0].length);
                // 处理剩余题目图片
                for (let i = 1; i < self.imgList.name.length; i++) {
                    lastindexOfName = self.imgList.name[i].lastIndexOf('/');
                    sendFormData['EnamePath'] += ';exercise/' + self.imgList.name[i].substring(lastindexOfName + 1, self.imgList.name[i].length);
                }

            } else if (self.audioUploadPath != '' && self.typePicker[self.subjectPicker[self.subjectIndex]][self.typeIndex] == '听写') {// 音频上传
                self.audioUpload(self, failUp);
                let lastindexOfAudio = self.audioUploadPath.lastIndexOf('/');

                sendFormData['EnamePath'] = 'exercise/' + self.audioUploadPath.substring(lastindexOfAudio + 1, self.audioUploadPath.length);
            }

            if (self.imgList.answer.length > 0) {
                let length = self.imgList.answer.length; //总数
                self.recursionImgUpload(self, self.imgList.answer, successUp, failUp, count, length);
                if (failUp > 0) {
                    wepy.showToast({
                        title: '上传图片出错', //提示的内容,
                        icon: 'error', //图标,
                        duration: 2000, //延迟时间,
                        mask: true, //显示透明蒙层，防止触摸穿透,
                        success: res => {
                        }
                    });
                    return;
                }
                // 处理答案图片第一个
                let lastindexOfAnswer = self.imgList.answer[0].lastIndexOf('/');
                sendFormData['EanswerPath'] = self.imgList.answer.length == 0 ? '' : 'exercise/' + self.imgList.answer[0].substring(lastindexOfAnswer + 1, self.imgList.answer[0].length);
                // 处理剩余答案图片
                for (let i = 1; i < self.imgList.answer.length; i++) {
                    lastindexOfAnswer = self.imgList.answer[i].lastIndexOf('/');
                    sendFormData['EanswerPath'] += ';exercise/' + self.imgList.answer[i].substring(lastindexOfAnswer + 1, self.imgList.answer[i].length);
                }
            }
            convertExercise(sendFormData)
            console.log(sendFormData);
            if (failUp == 0) {
                wepy.request({
                    url: wepy.$instance.globalData.serverUrl + '/app/exercise/insert_exercise',
                    method: 'POST',
                    data: sendFormData,
                    header: wepy.$instance.setHeader(),
                    success: function (res) {
                        console.log(res);
                        if (res.data.Code == 1) {
                            wepy.showToast({
                                title: '创建成功', //提示的内容,
                                icon: 'success', //图标,
                                duration: 2000, //延迟时间,
                                mask: true, //显示透明蒙层，防止触摸穿透,
                                success: function () {
                                    setTimeout(function () {
                                        wepy.navigateBack({
                                            delta: 1
                                        });
                                    }, 1000);

                                }
                            });
                        }
                    }
                });
            }
        }


    };

    // 递归方式上传多张图片
    recursionImgUpload(self, imgPaths, successUp, failUp, count, length) {
        wepy.uploadFile({
            url: wepy.$instance.globalData.serverUrl + '/app/file/upload_file', //开发者服务器 url
            filePath: imgPaths[count], //要上传文件资源的路径
            name: 'uploadFile', //文件对应的 key , 开发者在服务器端通过这个 key 可以获取到文件二进制内容
            formData: {
                dirName: 'images/exercise'
            },
            header: {
                'content-type': 'multipart/form-data'
            },
            success(e) {
                if (e.data.Code == 1) {
                    console.log('上传成功第' + count + '张');
                }
                successUp++;//成功+1
            },
            fail(e) {
                failUp++;//失败+1
            },
            complete(e) {

                count++;
                if (count == length) {
                    console.log('上传成功');
                } else {
                    self.recursionImgUpload(self, imgPaths, successUp, failUp, count, length);
                }
            }
        });

    }

    // 上传音频
    audioUpload(self, failUp) {
        wepy.uploadFile({
            url: wepy.$instance.globalData.serverUrl + '/app/file/upload_file', //开发者服务器 url
            header: wepy.$instance.setHeader(),
            filePath: self.audioUploadPath, //要上传文件资源的路径
            name: 'uploadFile', //文件对应的 key , 开发者在服务器端通过这个 key 可以获取到文件二进制内容
            formData: {
                dirName: 'audios/exercise'
            },
            header: {
                'content-type': 'multipart/form-data'
            },
            success(e) {
                console.log('录音保存成功');
            },
            fail(e) {
                failUp++;
                console.log('录音保存失败');
            }
        });
    }
}
</script>
